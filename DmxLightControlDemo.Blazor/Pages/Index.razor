@page "/"
@using System.Timers
@using DmxLightControlDemo.Core
@inject IStateManager StateManager

<PageTitle>DMX Light Control Demo</PageTitle>

<div class="container">
    <h1>DMX Light Control Demo</h1>
    
    <p>Fixture:
        <InputSelect @bind-Value="_fixture.FixtureID" @onchange="FixtureChange">
            @foreach(var fixture in StateManager.Fixtures)
            {
                <option value="@fixture.FixtureID">@fixture.Name</option>
            }
        </InputSelect>
    </p>
    
    <p>Parameter:
        <InputSelect @bind-Value="_dmxParameter.Channel" @onchange="ParameterChange">
            @foreach(var dmxParameter in _fixture.Parameters)
            {
                <option value="@dmxParameter.Channel">@dmxParameter.Name</option>
            }
        </InputSelect>
        </p>
    
    <div class="slideGrouper">
        <div class="sliderContain">
            <input type="range" step="1" @bind-value="_currentValue" min="0" max="255" @oninput="HandleRange">
        </div>
        <span class="slideValue">@_currentValue</span>
    </div>
</div>

@code
{
    private Fixture _fixture;
    private DmxParameter _dmxParameter;
    private byte _currentValue;
    private readonly Timer _timer = new ();

    protected override Task OnInitializedAsync()
    {
        _fixture = StateManager.Fixtures.First();
        _dmxParameter = _fixture.Parameters.First();
        return base.OnInitializedAsync();
    }
    
    private void HandleRange(ChangeEventArgs obj)
    {
        StateManager.SetDmxValue(_dmxParameter, Convert.ToByte(obj.Value));
        _currentValue = _dmxParameter.CurrentValue;
        _timer.Start();
    }

    private void FixtureChange(ChangeEventArgs obj)
    {
        var fixtureId = (int)obj.Value;
        _fixture = StateManager.Fixtures.Single(x => x.FixtureID == fixtureId);
        _dmxParameter = _fixture.Parameters.First();
    }

    private void ParameterChange(ChangeEventArgs obj)
    {
        _dmxParameter = (DmxParameter)obj.Value;
    }
}
